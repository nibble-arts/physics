//var gl;
var table ;

function load() {
	var scene = new Array;
	var obj;
	
	var canvas = document.getElementById("table");
	table = canvas.getContext("2d");

	obj = new Object("cicle");
	obj.circ(0,0,50);
	obj.color("","red",1)
	obj.pos(100,100);
	obj.rot(0);
	scene.push(obj);

	obj = new Object("shadow");
	obj.rect(-20,-20,40,40);
	obj.color("green","grey",3)
	obj.pos(50,80);
	obj.rot(20);
	obj.shadow({ color: "#8080ff", blur: 15 });
	scene.push(obj);

console.dir(scene);

	draw(table,scene);
}


//======================================================================
// create object
function Object(name,option) {
	this.name = name;

	this.px = 0;
	this.py = 0;
	this.r = 0;
	this.show = true;
	this.length = 0;
	this.shad = {};
}


//======================================================================
// set object form
Object.prototype.create = function (type,x,y,w,h,option) {
	this.form = {}

	this.form.type = type;
	
	this.form.x = x;
	this.form.y = y;
	this.form.width = w;

	if (h) this.form.height = h;
	
	if (option) {
		if (option.color) this.form.color = option.color;
		if (option.borderColor) this.form.borderColor = option.borderColor;
		if (option.alpha) this.form.alpha = option.alpha;
	
	}
}


//======================================================================
// make object a rectangle
Object.prototype.rect = function (x,y,width,height,option) {
	this.create("rect",x,y,width,height,option);
}


//======================================================================
// make object a cicle
Object.prototype.circ = function (x,y,r,option) {
	this.create("circ",x,y,r,0,option);
}


//======================================================================
// set object color
Object.prototype.color = function (fillColor,borderColor,borderWidth) {
	this.form.fillColor = fillColor;
	this.form.borderColor = borderColor;
	this.form.borderWidth = borderWidth;
}


//======================================================================
// set shadow of object
Object.prototype.shadow = function (option) {
	this.shad.color = option.color;
	this.shad.blur = option.blur;
}


//======================================================================
// set position of object
Object.prototype.pos = function(px,py,option) {
	this.px = px;
	this.py = py;
}


//======================================================================
// set rotation of object
Object.prototype.rot = function(r,option) {
	this.r = r;
}


//======================================================================
// set show parameter
Object.prototype.fade = function(option) {
	if (option) {
// set animation length
		(option.length) ? this.length = option.length:this.length = 0;

// set type of fade
		switch (option.type) {
			case "in":
				this.show = true;
				break;
			case "out":
				this.show = false;
				break;
		}
	}
	else
		(this.show) ? this.show = false:this.show = true;
}



//======================================================================
// draw scene
function draw (canvas,scene) {
	$.each(scene, function() {

// reset translation
		canvas.setTransform(1, 0, 0, 1, 0, 0);

		canvas.translate(this.px,this.py);
		canvas.rotate(this.r * Math.PI/180);

// set alpha
		(this.form.alpha) ? canvas.globalAlpha = this.form.alpha:canvas.globalAlpha = 1;

// set shadow
		if (this.shad) {
			canvas.shadowColor = this.shad.color;
			canvas.shadowBlur = this.shad.blur;
		}
		else {
			canvas.shadowColor = "";
			canvas.shadowBlur = 0;
		}

// draw form
		switch(this.form.type) {
			case "rect":
				canvas.beginPath();
				canvas.rect(this.form.x,this.form.y,this.form.width,this.form.height);

				if (this.form.fillColor) {
					canvas.fillStyle = this.form.fillColor;
					canvas.fill();
				}

				if (this.form.borderWidth) {
					canvas.strokeStyle = this.form.borderColor;
					canvas.lineWidth = this.form.borderWidth;
					canvas.stroke();
				}

				break;

			case "circ":
				canvas.beginPath();
				canvas.arc(this.form.x,this.form.y,this.form.width,0,2 * Math.PI,false);

				if (this.form.fillColor) {
					canvas.fillStyle = this.form.fillColor;
					canvas.fill();
				}

				if (this.form.borderWidth) {
					canvas.strokeStyle = this.form.borderColor;
					canvas.lineWidth = 1;
					canvas.stroke();
				}
				break;

			case "line":
				break;
		}
	});
}

